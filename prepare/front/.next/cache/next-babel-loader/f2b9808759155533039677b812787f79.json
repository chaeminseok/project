{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/esm/readOnlyError\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\chae\\\\workspace\\\\project\\\\prepare\\\\front\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useCallback, useRef, useState } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\nvar PostForm = function PostForm() {\n  _s();\n  var _useState = useState(\"\"),\n    text = _useState[0],\n    setText = _useState[1];\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    imagePath = _useSelector.imagePath;\n  var imageInput = useRef();\n  var dispatch = useDispatch();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onSubmit = useCallback(function () {\n    dispatch(addPost);\n    \"\", _readOnlyError(\"text\");\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": \"right\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, imagePath.map(function (v) {\n    __jsx(\"div\", {\n      key: v,\n      style: {\n        display: \"inline-block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: \"200px\"\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }));\n  })));\n};\n_s(PostForm, \"CHvTLrjfNn3xcU0PhUEDpuc7wUw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["useCallback","useRef","useState","Button","Form","Input","useDispatch","useSelector","addPost","PostForm","_s","_useState","text","setText","_useSelector","state","post","imagePath","imageInput","dispatch","onClickImageUpload","current","click","onSubmit","_readOnlyError","__jsx","style","margin","encType","onFinish","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","TextArea","value","onChange","onChangeText","maxLength","placeholder","type","multiple","hidden","ref","onClick","map","v","key","display","src","width","alt","_c","$RefreshReg$"],"sources":["C:/Users/chae/workspace/project/prepare/front/components/PostForm.js"],"sourcesContent":["import { useCallback, useRef, useState } from \"react\";\r\nimport { Button, Form, Input } from \"antd\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addPost } from \"../reducers/post\";\r\nconst PostForm = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const { imagePath } = useSelector((state) => state.post);\r\n  const imageInput = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(addPost);\r\n    text = \"\";\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      style={{ margin: \"10px 0 20px\" }}\r\n      encType=\"multipart/form-data\"\r\n      onFinish={onSubmit}\r\n    >\r\n      <Input.TextArea\r\n        value={text}\r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder=\"어떤 신기한 일이 있었나요?\"\r\n      />\r\n      <div>\r\n        <input type=\"file\" multiple hidden ref={imageInput} />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type=\"primary\" style={{ float: \"right\" }}>\r\n          짹짹\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePath.map((v) => {\r\n          <div key={v} style={{ display: \"inline-block\" }}>\r\n            <img src={v} style={{ width: \"200px\" }} alt={v} />\r\n          </div>;\r\n        })}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\nexport default PostForm;\r\n"],"mappings":";;;;;;AAAA,SAASA,WAAW,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACrD,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAE1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EAAAC,EAAA;EACrB,IAAAC,SAAA,GAAwBT,QAAQ,CAAC,EAAE,CAAC;IAA7BU,IAAI,GAAAD,SAAA;IAAEE,OAAO,GAAAF,SAAA;EACpB,IAAAG,YAAA,GAAsBP,WAAW,CAAC,UAACQ,KAAK;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAhDC,SAAS,GAAAH,YAAA,CAATG,SAAS;EACjB,IAAMC,UAAU,GAAGjB,MAAM,CAAC,CAAC;EAC3B,IAAMkB,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,IAAMc,kBAAkB,GAAGpB,WAAW,CAAC,YAAM;IAC3CkB,UAAU,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACJ,UAAU,CAACG,OAAO,CAAC,CAAC;EAExB,IAAME,QAAQ,GAAGvB,WAAW,CAAC,YAAM;IACjCmB,QAAQ,CAACX,OAAO,CAAC;IACV,EAAE,EAAAgB,cAAA;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,OACEC,KAAA,CAACrB,IAAI;IACHsB,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAc,CAAE;IACjCC,OAAO,EAAC,qBAAqB;IAC7BC,QAAQ,EAAEN,QAAS;IAAAO,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEnBX,KAAA,CAACpB,KAAK,CAACgC,QAAQ;IACbC,KAAK,EAAE1B,IAAK;IACZ2B,QAAQ,EAAEC,YAAa;IACvBC,SAAS,EAAE,GAAI;IACfC,WAAW,EAAC,wEAAiB;IAAAZ,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9B,CAAC,EACFX,KAAA;IAAAK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACEX,KAAA;IAAOkB,IAAI,EAAC,MAAM;IAACC,QAAQ;IAACC,MAAM;IAACC,GAAG,EAAE5B,UAAW;IAAAY,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EACtDX,KAAA,CAACtB,MAAM;IAAC4C,OAAO,EAAE3B,kBAAmB;IAAAU,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,0CAAgB,CAAC,EACrDX,KAAA,CAACtB,MAAM;IAACwC,IAAI,EAAC,SAAS;IAACjB,KAAK,EAAE;MAAE,SAAO;IAAQ,CAAE;IAAAI,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,iBAEzC,CACL,CAAC,EACNX,KAAA;IAAAK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGnB,SAAS,CAAC+B,GAAG,CAAC,UAACC,CAAC,EAAK;IACpBxB,KAAA;MAAKyB,GAAG,EAAED,CAAE;MAACvB,KAAK,EAAE;QAAEyB,OAAO,EAAE;MAAe,CAAE;MAAArB,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC9CX,KAAA;MAAK2B,GAAG,EAAEH,CAAE;MAACvB,KAAK,EAAE;QAAE2B,KAAK,EAAE;MAAQ,CAAE;MAACC,GAAG,EAAEL,CAAE;MAAAnB,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAC9C,CAAC;EACR,CAAC,CACE,CACD,CAAC;AAEX,CAAC;AAAC1B,EAAA,CA3CID,QAAQ;EAAA,QAEUF,WAAW,EAEhBD,WAAW;AAAA;AAAAiD,EAAA,GAJxB9C,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}