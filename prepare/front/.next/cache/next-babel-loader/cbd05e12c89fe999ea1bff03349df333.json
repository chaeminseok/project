{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chae\\\\workspace\\\\project\\\\prepare\\\\front\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Card, Popover, Button, Avatar } from \"antd\";\nimport propTypes from \"prop-types\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport PostImages from \"./PostImages\";\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me && me.id;\n  {\n    /* const id=me?.id;*/\n  }\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }, post.User.nickname),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n};\nPostCard.propTypes = {\n  post: propTypes.shape({\n    id: propTypes.number,\n    User: propTypes.object,\n    content: propTypes.string,\n    Comments: propTypes.arrayOf(propTypes.object),\n    Images: propTypes.arrayOf(propTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["React","useState","useCallback","useSelector","Card","Popover","Button","Avatar","propTypes","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","PostImages","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","me","state","user","id","__jsx","style","marginBottom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","cover","Images","images","actions","key","content","Group","User","Fragment","Meta","avatar","nickname","title","description","shape","number","object","string","Comments","arrayOf","isRequired"],"sources":["C:/Users/chae/workspace/project/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Card, Popover, Button, Avatar } from \"antd\";\r\nimport propTypes from \"prop-types\";\r\n\r\nimport {\r\n  RetweetOutlined,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  EllipsisOutlined,\r\n} from \"@ant-design/icons\";\r\nimport PostImages from \"./PostImages\";\r\nconst PostCard = ({ post }) => {\r\n  const [liked, setLiked] = useState(false);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const { me } = useSelector((state) => state.user);\r\n  const id = me && me.id;\r\n  {\r\n    /* const id=me?.id;*/\r\n  }\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          <HeartOutlined key=\"heart\" />,\r\n          <MessageOutlined key=\"comment\" />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button>삭제</Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </Button.Group>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={post.content}\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nPostCard.propTypes = {\r\n  post: propTypes.shape({\r\n    id: propTypes.number,\r\n    User: propTypes.object,\r\n    content: propTypes.string,\r\n    Comments: propTypes.arrayOf(propTypes.object),\r\n    Images: propTypes.arrayOf(propTypes.object),\r\n  }).isRequired,\r\n};\r\nexport default PostCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}