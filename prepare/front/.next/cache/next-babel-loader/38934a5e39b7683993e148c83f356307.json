{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chae\\\\workspace\\\\project\\\\prepare\\\\front\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Card, Popover, Button, Avatar, List } from \"antd\";\nimport propTypes from \"prop-types\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone, Comment } from \"@ant-design/icons\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me && me.id;\n  {\n    /* const id=me?.id;*/\n  }\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heartTwo\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, post.User.nickname),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: `${post.Comments.length}개의 댓글`,\n    itmemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 27\n        }\n      }, item.User.nickname[0]),\n      content: item.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })));\n};\nPostCard.propTypes = {\n  post: propTypes.shape({\n    id: propTypes.number,\n    User: propTypes.object,\n    content: propTypes.string,\n    Comments: propTypes.arrayOf(propTypes.object),\n    Images: propTypes.arrayOf(propTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["React","useState","useCallback","useSelector","Card","Popover","Button","Avatar","List","propTypes","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","Comment","PostImages","CommentForm","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","me","state","user","id","__jsx","style","marginBottom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","cover","Images","images","actions","key","twoToneColor","onClick","content","Group","User","Fragment","Meta","avatar","nickname","title","description","header","Comments","length","itmemLayout","dataSource","renderItem","item","author","shape","number","object","string","arrayOf","isRequired"],"sources":["C:/Users/chae/workspace/project/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Card, Popover, Button, Avatar, List } from \"antd\";\r\nimport propTypes from \"prop-types\";\r\nimport {\r\n  RetweetOutlined,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  EllipsisOutlined,\r\n  HeartTwoTone,\r\n  Comment,\r\n} from \"@ant-design/icons\";\r\n\r\nimport PostImages from \"./PostImages\";\r\nimport CommentForm from \"./CommentForm\";\r\nconst PostCard = ({ post }) => {\r\n  const [liked, setLiked] = useState(false);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n\r\n  const onToggleLike = useCallback(() => {\r\n    setLiked((prev) => !prev);\r\n  }, []);\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n  const { me } = useSelector((state) => state.user);\r\n  const id = me && me.id;\r\n\r\n  {\r\n    /* const id=me?.id;*/\r\n  }\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          liked ? (\r\n            <HeartTwoTone\r\n              twoToneColor=\"#eb2f96\"\r\n              key=\"heartTwo\"\r\n              onClick={onToggleLike}\r\n            />\r\n          ) : (\r\n            <HeartOutlined key=\"heart\" onClick={onToggleLike} />\r\n          ),\r\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button>삭제</Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </Button.Group>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={post.content}\r\n        />\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <div>\r\n          <CommentForm post={post} />\r\n          <List\r\n            header={`${post.Comments.length}개의 댓글`}\r\n            itmemLayout=\"horizontal\"\r\n            dataSource={post.Comments}\r\n            renderItem={(item) => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nPostCard.propTypes = {\r\n  post: propTypes.shape({\r\n    id: propTypes.number,\r\n    User: propTypes.object,\r\n    content: propTypes.string,\r\n    Comments: propTypes.arrayOf(propTypes.object),\r\n    Images: propTypes.arrayOf(propTypes.object),\r\n  }).isRequired,\r\n};\r\nexport default PostCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,QAAQ,MAAM;AAC1D,OAAOC,SAAS,MAAM,YAAY;AAClC,SACEC,eAAe,EACfC,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBC,YAAY,EACZC,OAAO,QACF,mBAAmB;AAE1B,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC7B,MAAM;IAAA,GAACC,KAAK;IAAA,GAAEC;EAAQ,IAAIpB,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM;IAAA,GAACqB,iBAAiB;IAAA,GAAEC;EAAoB,IAAItB,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMuB,YAAY,GAAGtB,WAAW,CAAC,MAAM;IACrCmB,QAAQ,CAAEI,IAAI,IAAK,CAACA,IAAI,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,eAAe,GAAGxB,WAAW,CAAC,MAAM;IACxCqB,oBAAoB,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EACN,MAAM;IAAEE;EAAG,CAAC,GAAGxB,WAAW,CAAEyB,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACjD,MAAMC,EAAE,GAAGH,EAAE,IAAIA,EAAE,CAACG,EAAE;EAEtB;IACE;EAAA;EAEF,OACEC,KAAA;IAAKC,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAG,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/BR,KAAA,CAAC3B,IAAI;IACHoC,KAAK,EAAErB,IAAI,CAACsB,MAAM,CAAC,CAAC,CAAC,IAAIV,KAAA,CAACf,UAAU;MAAC0B,MAAM,EAAEvB,IAAI,CAACsB,MAAO;MAAAP,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAE;IAC7DI,OAAO,EAAE,CACPZ,KAAA,CAACrB,eAAe;MAACkC,GAAG,EAAC,SAAS;MAAAV,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,EACjCnB,KAAK,GACHW,KAAA,CAACjB,YAAY;MACX+B,YAAY,EAAC,SAAS;MACtBD,GAAG,EAAC,UAAU;MACdE,OAAO,EAAEtB,YAAa;MAAAU,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACvB,CAAC,GAEFR,KAAA,CAACpB,aAAa;MAACiC,GAAG,EAAC,OAAO;MAACE,OAAO,EAAEtB,YAAa;MAAAU,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACpD,EACDR,KAAA,CAACnB,eAAe;MAACgC,GAAG,EAAC,SAAS;MAACE,OAAO,EAAEpB,eAAgB;MAAAQ,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,EAC3DR,KAAA,CAAC1B,OAAO;MACNuC,GAAG,EAAC,MAAM;MACVG,OAAO,EACLhB,KAAA,CAACzB,MAAM,CAAC0C,KAAK;QAAAd,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACVT,EAAE,IAAIX,IAAI,CAAC8B,IAAI,CAACnB,EAAE,KAAKA,EAAE,GACxBC,KAAA,CAAA/B,KAAA,CAAAkD,QAAA,QACEnB,KAAA,CAACzB,MAAM;QAAA4B,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,iBAAW,CAAC,EACnBR,KAAA,CAACzB,MAAM;QAAA4B,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,iBAAW,CAClB,CAAC,GAEHR,KAAA,CAACzB,MAAM;QAAA4B,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,iBAAW,CAER,CACf;MAAAL,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEDR,KAAA,CAAClB,gBAAgB;MAAAqB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACZ,CAAC,CACV;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEFR,KAAA,CAAC3B,IAAI,CAAC+C,IAAI;IACRC,MAAM,EAAErB,KAAA,CAACxB,MAAM;MAAA2B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEpB,IAAI,CAAC8B,IAAI,CAACI,QAAiB,CAAE;IAC9CC,KAAK,EAAEnC,IAAI,CAAC8B,IAAI,CAACI,QAAS;IAC1BE,WAAW,EAAEpC,IAAI,CAAC4B,OAAQ;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC3B,CACG,CAAC,EACNjB,iBAAiB,IAChBS,KAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACER,KAAA,CAACd,WAAW;IAACE,IAAI,EAAEA,IAAK;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAC3BR,KAAA,CAACvB,IAAI;IACHgD,MAAM,EAAG,GAAErC,IAAI,CAACsC,QAAQ,CAACC,MAAO,OAAO;IACvCC,WAAW,EAAC,YAAY;IACxBC,UAAU,EAAEzC,IAAI,CAACsC,QAAS;IAC1BI,UAAU,EAAGC,IAAI,IACf/B,KAAA;MAAAG,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACER,KAAA,CAAChB,OAAO;MACNgD,MAAM,EAAED,IAAI,CAACb,IAAI,CAACI,QAAS;MAC3BD,MAAM,EAAErB,KAAA,CAACxB,MAAM;QAAA2B,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAEuB,IAAI,CAACb,IAAI,CAACI,QAAQ,CAAC,CAAC,CAAU,CAAE;MACjDN,OAAO,EAAEe,IAAI,CAACf,OAAQ;MAAAb,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACvB,CACC,CACJ;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CACE,CAEJ,CAAC;AAEV,CAAC;AACDrB,QAAQ,CAACT,SAAS,GAAG;EACnBU,IAAI,EAAEV,SAAS,CAACuD,KAAK,CAAC;IACpBlC,EAAE,EAAErB,SAAS,CAACwD,MAAM;IACpBhB,IAAI,EAAExC,SAAS,CAACyD,MAAM;IACtBnB,OAAO,EAAEtC,SAAS,CAAC0D,MAAM;IACzBV,QAAQ,EAAEhD,SAAS,CAAC2D,OAAO,CAAC3D,SAAS,CAACyD,MAAM,CAAC;IAC7CzB,MAAM,EAAEhC,SAAS,CAAC2D,OAAO,CAAC3D,SAAS,CAACyD,MAAM;EAC5C,CAAC,CAAC,CAACG;AACL,CAAC;AACD,eAAenD,QAAQ"},"metadata":{},"sourceType":"module"}